--Number of patients per city in descending (having 10 at least)
SELECT city, COUNT(*) AS Patient_count FROM HEALTHCARE.HEALTH.PATIENTS 
GROUP BY city
HAVING COUNT(*) >= 10
ORDER BY Patient_count DESC

UPDATE HEALTHCARE.HEALTH.PATIENTS 
SET FIRST = REGEXP_REPLACE(FIRST, '[0-9]+$', ''),
    LAST = REGEXP_REPLACE(LAST, '[0-9]+$', '');

--Top 100 patients with the highest number of visits

SELECT P.ID, CONCAT(P.FIRST, '_', P.LAST) AS FULL_NAME, COUNT(*) AS VISITS
FROM HEALTHCARE.HEALTH.PATIENTS P LEFT JOIN HEALTHCARE.HEALTH.ENCOUNTERS E ON
P.ID = E.PATIENT
GROUP BY P.ID,CONCAT(P.FIRST, '_', P.LAST) 
ORDER BY VISITS DESC
LIMIT 100

--Number of times patients from each city visited the hospital

SELECT P.city, CONCAT(P.FIRST, '_', P.LAST) AS FULL_NAME, COUNT(*) AS VISITS
FROM HEALTHCARE.HEALTH.PATIENTS P LEFT JOIN HEALTHCARE.HEALTH.ENCOUNTERS E ON
P.ID = E.PATIENT
GROUP BY P.city, CONCAT(P.FIRST, '_', P.LAST)
ORDER BY VISITS DESC

--Cities with at least 10 counts of emergency cases
SELECT P.city, COUNT(EncounterClass) AS ENCOUNTER_VISITS
FROM HEALTHCARE.HEALTH.PATIENTS P LEFT JOIN HEALTHCARE.HEALTH.ENCOUNTERS E ON
P.ID = E.PATIENT
WHERE ENCOUNTERCLASS LIKE '%emergency%'
GROUP BY P.city
HAVING ENCOUNTER_VISITS >= 10
ORDER BY ENCOUNTER_VISITS DESC


--Patients from Boston and their conditions 

SELECT CONCAT(P.FIRST, '_', P.LAST) AS FULL_NAME, P.CITY, C.DESCRIPTION AS CONDITION_NAME
FROM HEALTHCARE.HEALTH.PATIENTS P LEFT JOIN HEALTHCARE.HEALTH.CONDITIONS C ON
P.ID = C.PATIENT
WHERE CITY = 'Boston'
GROUP BY CONCAT(P.FIRST, '_', P.LAST), P.CITY, C.DESCRIPTION

--Top recurring conditions

SELECT C.DESCRIPTION AS RECURRING_CONDITION,COUNT(P.ID) AS PATIENT_COUNT
FROM HEALTHCARE.HEALTH.PATIENTS P LEFT JOIN HEALTHCARE.HEALTH.CONDITIONS C ON
P.ID = C.PATIENT
GROUP BY C.DESCRIPTION 
ORDER BY PATIENT_COUNT DESC
LIMIT 10

--Diabetes patients based on race
SELECT P.RACE, COUNT(*) AS TOTAL
FROM HEALTHCARE.HEALTH.PATIENTS P LEFT JOIN HEALTHCARE.HEALTH.CONDITIONS C ON
P.ID = C.PATIENT
WHERE C.DESCRIPTION LIKE '%diabetes%'
GROUP BY P.RACE

--Number of times each procedure was carried out 

SELECT PD.DESCRIPTION, COUNT(PD.DESCRIPTION) AS PROCEDURE_COUNT
FROM HEALTHCARE.HEALTH.PROCEDURES PD
GROUP BY PD.DESCRIPTION
ORDER BY PROCEDURE_COUNT DESC

--People who took the pregnancy test

SELECT CONCAT(P.FIRST, '_', P.LAST) AS FULL_NAME, PD.DESCRIPTION, COUNT(PD.DESCRIPTION) AS PROCEDURE_COUNT
FROM HEALTHCARE.HEALTH.PATIENTS P RIGHT JOIN HEALTHCARE.HEALTH.PROCEDURES PD ON
P.ID = PD.PATIENT
WHERE PD.DESCRIPTION LIKE '%pregnancy test%'
GROUP BY CONCAT(P.FIRST, '_', P.LAST),  PD.DESCRIPTION
ORDER BY PROCEDURE_COUNT

--Number of people who are allergic to dairy, soya and fish

SELECT A.DESCRIPTION, COUNT(A.DESCRIPTION) AS TOTAL_CNT
FROM HEALTHCARE.HEALTH.PATIENTS P RIGHT JOIN HEALTHCARE.HEALTH.ALLERGIES A ON
P.ID = A.PATIENT
WHERE A.DESCRIPTION LIKE '%dairy%'
GROUP BY  A.DESCRIPTION
UNION
SELECT A.DESCRIPTION, COUNT(A.DESCRIPTION) AS TOTAL_CNT
FROM HEALTHCARE.HEALTH.PATIENTS P RIGHT JOIN HEALTHCARE.HEALTH.ALLERGIES A ON
P.ID = A.PATIENT
WHERE A.DESCRIPTION LIKE '%soya%'
GROUP BY  A.DESCRIPTION
UNION
SELECT A.DESCRIPTION, COUNT(A.DESCRIPTION) AS TOTAL_CNT
FROM HEALTHCARE.HEALTH.PATIENTS P RIGHT JOIN HEALTHCARE.HEALTH.ALLERGIES A ON
P.ID = A.PATIENT
WHERE A.DESCRIPTION LIKE '%fish%'
GROUP BY  A.DESCRIPTION
ORDER BY TOTAL_CNT desc

--Highest amount of healthcare expense
SELECT MAX(P.HEALTHCARE_EXPENSES) highest_amt
FROM HEALTHCARE.HEALTH.PATIENTS P


